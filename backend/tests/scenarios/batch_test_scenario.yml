scenario_name: "출금이체_대량처리_테스트"
batch_id: "EB34"
dependencies:
  - "BATCH000"
test_data:
  header:
    date: "TODAY"
    total_count: "{{data_sets의_총_건수}}"
  
  data_sets:
    - name: "정상처리_케이스"
      count: 1000  # 정상 케이스 1000건
      template:
        account: "{{random_account(10)}}"  # 10자리 랜덤 계좌번호
        amount: "{{random_range(1000, 50000, 1000)}}"  # 1000~50000원 사이 1000원 단위
        status: "READY"
        save_as: "EB34_account_{{index}}"  # index는 1부터 시작하는 일련번호
    
    - name: "한도초과_케이스"
      count: 50
      template:
        account: "{{random_account(10)}}"
        amount: "{{random_range(1000000, 2000000, 10000)}}"  # 백만원 이상
        status: "READY"
        save_as: "EB34_limit_exceed_{{index}}"
    
    - name: "잘못된_계좌번호_케이스"
      count: 50
      template:
        account: "{{random_invalid_account()}}"  # 잘못된 형식의 계좌번호
        amount: "{{random_range(1000, 50000, 1000)}}"
        status: "READY"
        save_as: "EB34_invalid_{{index}}"

  trailer:
    total_amount: "{{sum_of_all_amounts}}"  # 모든 data의 amount 합계

validations:
  db_checks:
    - table: "TRANSFER_HISTORY"
      conditions:
        success_case:
          where: "account IN {{saved_accounts.EB34_account_*}}"
          status: "SUCCESS"
          expected_count: 1000
        limit_exceed_case:
          where: "account IN {{saved_accounts.EB34_limit_exceed_*}}"
          status: "FAILED"
          error_code: "E001"
          expected_count: 50
        invalid_account_case:
          where: "account IN {{saved_accounts.EB34_invalid_*}}"
          status: "FAILED"
          error_code: "E002"
          expected_count: 50
  
  file_checks:
    output_file:
      total_size: "{{expected_file_size}}"
      record_counts:
        success: 1000
        fail: 100